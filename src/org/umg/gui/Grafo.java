/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.umg.gui;

import java.awt.BorderLayout;
import java.awt.Rectangle;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.umg.arbolbinario.ArbolBinario;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import org.umg.nodoarbol.SimuladorArbolBinario;

/**
 *
 * @author Edgar Mayorga
 */
public class Grafo extends javax.swing.JFrame {
    private ArbolBinario arbolB = new ArbolBinario();
    private SimuladorArbolBinario simulador = new SimuladorArbolBinario();
    
    /**
     * Creates new form Grafo
     */
    public Grafo() {
        initComponents();
        this.setBounds(0, 0, 1100, 800);
        this.setLocationRelativeTo(null);
        
        try {
            taDatosEstudiante.append("=================================================\n\n");
            taDatosEstudiante.append("5190-05-407, MYNOR ADÁN LÓPEZ IZAGUIRRE, SECCION A \n\n");
            taDatosEstudiante.append("" + InetAddress.getLocalHost() + "\n\n");
        } catch (UnknownHostException ex) {
            Logger.getLogger(Grafo.class.getName()).log(Level.SEVERE, null, ex);
        }
        taDatosEstudiante.append("=================================================");
    }
    
    public void complementos(){
        this.repintarArbol();
    }
    private void repintarArbol() {
        this.jDesktopPane1.removeAll();
        Rectangle tamaño = this.jInternalFrame1.getBounds();
        this.jInternalFrame1 = null;
        this.jInternalFrame1 = new JInternalFrame("GRÁFICO DE ARBOL BINARIO", true);
        this.jDesktopPane1.add(this.jInternalFrame1, JLayeredPane.DEFAULT_LAYER);
        this.jInternalFrame1.setVisible(true);
        this.jInternalFrame1.setBounds(tamaño);
        this.jInternalFrame1.setEnabled(false);
        this.jInternalFrame1.add(this.simulador.getDibujo(), BorderLayout.CENTER);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGrafo = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        btnCargarRegistros = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDatosEstudiante = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        taAcciones = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        btnMostrarArbol2 = new javax.swing.JButton();
        btnPreOrden = new javax.swing.JButton();
        btnInOrden = new javax.swing.JButton();
        txtNodo = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Arbol Binario");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        pnlGrafo.setLayout(null);

        jDesktopPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jDesktopPane1.setOpaque(false);
        jDesktopPane1.setLayout(new javax.swing.BoxLayout(jDesktopPane1, javax.swing.BoxLayout.LINE_AXIS));

        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setTitle("GRAFICO DE ARBOL BINARIO");
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );

        jDesktopPane1.add(jInternalFrame1);

        pnlGrafo.add(jDesktopPane1);
        jDesktopPane1.setBounds(10, 10, 550, 530);

        btnCargarRegistros.setText("Cargar registros");
        btnCargarRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarRegistrosActionPerformed(evt);
            }
        });
        pnlGrafo.add(btnCargarRegistros);
        btnCargarRegistros.setBounds(10, 570, 130, 40);

        jLabel1.setText("DATOS DE ESTUDIANTE");
        pnlGrafo.add(jLabel1);
        jLabel1.setBounds(570, 10, 420, 14);

        taDatosEstudiante.setEditable(false);
        taDatosEstudiante.setColumns(20);
        taDatosEstudiante.setRows(6);
        jScrollPane1.setViewportView(taDatosEstudiante);

        pnlGrafo.add(jScrollPane1);
        jScrollPane1.setBounds(570, 40, 420, 120);

        taAcciones.setEditable(false);
        taAcciones.setColumns(20);
        taAcciones.setRows(5);
        jScrollPane2.setViewportView(taAcciones);

        pnlGrafo.add(jScrollPane2);
        jScrollPane2.setBounds(570, 190, 420, 350);

        jLabel2.setText("ACCIONES");
        pnlGrafo.add(jLabel2);
        jLabel2.setBounds(570, 170, 220, 14);

        btnMostrarArbol2.setText("Mostrar Arbol B");
        btnMostrarArbol2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarArbol2ActionPerformed(evt);
            }
        });
        pnlGrafo.add(btnMostrarArbol2);
        btnMostrarArbol2.setBounds(150, 570, 130, 40);

        btnPreOrden.setText("PreOrden");
        btnPreOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreOrdenActionPerformed(evt);
            }
        });
        pnlGrafo.add(btnPreOrden);
        btnPreOrden.setBounds(290, 570, 130, 40);

        btnInOrden.setText("InOrden");
        btnInOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInOrdenActionPerformed(evt);
            }
        });
        pnlGrafo.add(btnInOrden);
        btnInOrden.setBounds(430, 570, 130, 40);

        txtNodo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        pnlGrafo.add(txtNodo);
        txtNodo.setBounds(570, 570, 80, 40);

        btnEliminar.setText("Eliminar Nodo");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        pnlGrafo.add(btnEliminar);
        btnEliminar.setBounds(650, 570, 130, 40);

        jLabel3.setText("CODIGO CURSO:");
        pnlGrafo.add(jLabel3);
        jLabel3.setBounds(570, 550, 110, 14);

        getContentPane().add(pnlGrafo);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarRegistrosActionPerformed
        // TODO add your handling code here:
        try {
            simulador.insertar();
            JOptionPane.showMessageDialog(null, "Informacion cargada en el arbol con exito.", " ...", 1);
            //this.inicializar(true);
            //complementos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se pudo cargar los registros al arbol", "Intente de nuevo..." + e.getMessage(), 0);

        }
    }//GEN-LAST:event_btnCargarRegistrosActionPerformed

    private void btnMostrarArbol2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarArbol2ActionPerformed
        // TODO add your handling code here:
        if(!simulador.estaVacio() == true){
            complementos();
        }else{
            JOptionPane.showMessageDialog(null, "No existen datos cargados en el arbol. Presione primero el boton cargar registros.", "Mensaje", 1);
        }
        
    }//GEN-LAST:event_btnMostrarArbol2ActionPerformed

    private void btnPreOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreOrdenActionPerformed
        // TODO add your handling code here:
        if(!simulador.estaVacio() == true){
            String recorrido = null;
            recorrido = this.simulador.preOrden();
            this.taAcciones.setText("");
            this.taAcciones.setText(recorrido);
        }else{
            JOptionPane.showMessageDialog(null, "No existen datos cargados en el arbol. Presione primero el boton cargar registros.", "Mensaje", 1);
        }
    }//GEN-LAST:event_btnPreOrdenActionPerformed

    private void btnInOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInOrdenActionPerformed
        // TODO add your handling code here:
        if(!simulador.estaVacio() == true){
            String recorrido = null;
            recorrido = this.simulador.inOrden();
            this.taAcciones.setText("");
            this.taAcciones.setText(recorrido);
        }else{
            JOptionPane.showMessageDialog(null, "No existen datos cargados en el arbol. Presione primero el boton cargar registros.", "Mensaje", 1);
        }
    }//GEN-LAST:event_btnInOrdenActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int codigoCurso = 0;
        
        if(!simulador.estaVacio() == true){
            if(!txtNodo.equals("")){
                codigoCurso = Integer.parseInt(txtNodo.getText().trim());
                simulador.eliminarNodo(codigoCurso);
                JOptionPane.showMessageDialog(null, "Se elimino el codigo de curso " + codigoCurso, "Mensaje", 1);
                txtNodo.setText("");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No existen datos cargados en el arbol para ser eliminados. Presione primero el boton cargar registros.", "Mensaje", 1);
            txtNodo.setText("");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Grafo(totalElementos).setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarRegistros;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInOrden;
    private javax.swing.JButton btnMostrarArbol2;
    private javax.swing.JButton btnPreOrden;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlGrafo;
    private javax.swing.JTextArea taAcciones;
    private javax.swing.JTextArea taDatosEstudiante;
    private javax.swing.JTextField txtNodo;
    // End of variables declaration//GEN-END:variables
}
